version: 2

references:

  workspace: &workspace
               ~/src

  android_config: &android_config
    working_directory: *workspace
    docker:
      - image: circleci/android:api-30
    environment:
      TERM: dumb
      _JAVA_OPTIONS: "-Xmx1280m -XX:+UnlockExperimentalVMOptions"
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx1280m"'

  gradle_key: &gradle_key
                jars-{{ checksum "build.gradle" }}-{{ checksum  "rohan_app/build.gradle" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}

  gems_key: &gems_key
              gems-{{ checksum "Gemfile.lock" }}

  restore_gradle_cache: &restore_gradle_cache
    restore_cache:
      key: *gradle_key

  restore_gems_cache: &restore_gems_cache
    restore_cache:
      key: *gems_key

  save_gradle_cache: &save_gradle_cache
    save_cache:
      key: *gradle_key
      paths:
        - ~/.gradle
        - ~/.m2

  save_gems_cache: &save_gems_cache
    save_cache:
      key: *gems_key
      paths:
        - vendor/bundle

  ruby_dependencies: &ruby_dependencies
    run:
      name: Download Ruby Dependencies
      command: |
        gem install bundler
        bundle check || bundle install --path vendor/bundle

  android_dependencies: &android_dependencies
    run:
      name: Download Android Dependencies
      command: ./gradlew androidDependencies


jobs:

  # Run Unit Test
  test_unit:
    <<: *android_config
    steps:
      - checkout
      - *restore_gradle_cache
      - *restore_gems_cache
      - *ruby_dependencies
      - *android_dependencies
      - *save_gradle_cache
      - *save_gems_cache

      - run:
          name: Run Unit Tests
          command: bundle exec fastlane assemble_build build_flavor:$BUILD_FLAVOR build_type:$BUILD_TYPE

      - store_artifacts:
          path: app/build/reports
          destination: reports

      - store_test_results:
          path: app/build/test-results
          destination: /test-results

  # Run UI Test
  test_instrumentation:
    <<: *android_config
    steps:
      - checkout
      - *restore_gradle_cache
      - *restore_gems_cache
      - *ruby_dependencies
      - *android_dependencies
      - *save_gradle_cache
      - *save_gems_cache

      - run:
          name: Send Debug and Release Apk
          command:
            bundle exec fastlane send_apk_to_slack build_flavor:"Prod" build_type:"Release"

      - store_artifacts:
          path: app/build/outputs/apk
          destination: /apk/

workflows:
  version: 2
  workflow:
    jobs:
      - test_unit

      - test_instrumentation:
          filters:
            branches:
              only:
                - main
          requires:
            - test_unit
